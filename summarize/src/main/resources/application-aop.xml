<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="XmlAspect" class="com.demo.summarize.aop.aspect.XmlAspect"></bean>

    <!-- AOP配置 -->
    <aop:config>
        <!-- 声明一个切面，并 注入切面Bean ,相当于@Aspect -->
        <aop:aspect ref="XmlAspect">
            <!-- 配置一个切入点，相当于@Pointcut，用来切面规律一种语音-->
            <aop:pointcut id="simplePointcut" expression="execution(* com.demo.summarize.aop.service..*(..))"/>
            <!-- 配置通知，相当于@Before\@After\@AfterReturn\@Around\@AfterThrowing -->
            <aop:before method="before" pointcut-ref="simplePointcut"/>
            <aop:after method="after" pointcut-ref="simplePointcut"/>
            <aop:after-returning method="afterReturn" pointcut-ref="simplePointcut"/>
            <aop:after-throwing method="afterThrow" pointcut-ref="simplePointcut" throwing="e"/>
        </aop:aspect>
    </aop:config>
</beans>